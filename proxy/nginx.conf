events {
    worker_connections 1024;
}

http {
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Basic security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # Upstream definitions
    upstream tiris-backend {
        server host.docker.internal:8080;
        keepalive 32;
    }
    
    upstream tiris-portal {
        server host.docker.internal:8081;
        keepalive 32;
    }
    
    upstream tiris-pred {
        server host.docker.internal:8082;
        keepalive 32;
    }

    # Backend API - backend.dev.tiris.ai
    server {
        listen 80;
        server_name backend.dev.tiris.ai;
        
        # Health check endpoint for load balancer
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        location / {
            proxy_pass http://tiris-backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Keep alive
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
    }

    # Portal Frontend - www.dev.tiris.ai
    server {
        listen 80;
        server_name www.dev.tiris.ai;
        
        location / {
            proxy_pass http://tiris-portal;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Keep alive
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
    }

    # Prediction Service - pred.dev.tiris.ai
    server {
        listen 80;
        server_name pred.dev.tiris.ai;
        
        location / {
            proxy_pass http://tiris-pred;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Keep alive
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
    }
    
    # Default server (catch-all for undefined subdomains)
    server {
        listen 80 default_server;
        server_name _;
        
        # Health check endpoint for load balancer
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        location / {
            return 404 "Subdomain not found";
        }
    }
}
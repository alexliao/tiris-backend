{{- if .Values.migration.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "tiris-backend.fullname" . }}-migration
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "tiris-backend.labels" . | nindent 4 }}
    app.kubernetes.io/component: migration
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  backoffLimit: 3
  template:
    metadata:
      labels:
        {{- include "tiris-backend.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: migration
    spec:
      restartPolicy: Never
      serviceAccountName: {{ include "tiris-backend.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.deployment.securityContext | nindent 8 }}
      initContainers:
      - name: wait-for-postgres
        image: postgres:15-alpine
        command: ['sh', '-c']
        args:
        - |
          until pg_isready -h {{ include "tiris-backend.postgresHost" . }} -p {{ .Values.config.database.port }} -U {{ .Values.config.database.user }}; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done
          echo "PostgreSQL is ready"
        env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "tiris-backend.fullname" . }}-secrets
              key: database-password
      containers:
      - name: migration
        image: "{{ .Values.migration.image.registry }}/{{ .Values.migration.image.repository }}:{{ .Values.migration.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["./server"]
        args: ["migrate"]
        env:
        - name: ENV
          value: {{ .Values.config.environment }}
        - name: LOG_LEVEL
          value: {{ .Values.config.logLevel }}
        - name: DB_HOST
          value: {{ include "tiris-backend.postgresHost" . }}
        - name: DB_PORT
          value: {{ .Values.config.database.port | quote }}
        - name: DB_NAME
          value: {{ .Values.config.database.name }}
        - name: DB_USER
          value: {{ .Values.config.database.user }}
        - name: DB_SSL_MODE
          value: {{ .Values.config.database.sslMode }}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "tiris-backend.fullname" . }}-secrets
              key: database-password
        resources:
          {{- toYaml .Values.migration.resources | nindent 12 }}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: tmp-volume
        emptyDir: {}
{{- end }}